{"version":3,"sources":["components/Layout/styles.ts","components/ServerList/styles.ts","data/data.ts","components/ServerButton/styles.ts","assets/Logo.svg","components/ServerButton/index.tsx","components/ServerList/index.tsx","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelList/styles.ts","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/styles.ts","components/ChannelData/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/Layout/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["Grid","styled","div","Container","Separator","users","nickname","status","isBot","servers","name","isHome","mentions","hasNotifications","Button","button","props","ServerButton","selected","className","src","Logo","alt","ServerList","map","server","index","Title","ExpandIcon","ExpandMore","ServerName","HashTagIcon","Hashtag","h1","Description","span","ChannelInfo","Category","AddCategoryIcon","Add","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","label","bg","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadPhoneIcon","Headset","UserInfo","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMentions","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","messagesRef","useRef","useState","text","setText","Date","getHours","getMinutes","messages","setMessages","useEffect","current","scrollTop","scrollHeight","getTime","time","hourString","minutesString","toString","ref","message","placeholder","value","onChange","event","target","onKeyDown","key","white_spaces","split","t","i","length","verifyStringVoid","messagesAux","push","handleKeyDown","Role","User","UserRow","UserList","filter","user","Layout","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12fbab9e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// SL = Server List\r\n// SN = Server Name\r\n// CI = Channel Info\r\n// CL = Channel List\r\n// CD = Channel Data\r\n// UL = User List\r\n// UI = User Info\r\n\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n\r\n    grid-template-columns: 71px 240px auto 240px;\r\n    grid-template-rows: 46px auto 52px;\r\n\r\n    grid-template-areas: \r\n        'SL SN CI CI'\r\n        'SL CL CD UL'\r\n        'SL UI CD UL'\r\n    ;\r\n\r\n    height: 100vh;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    grid-area: SL;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    background-color: var(--tertiary);\r\n    padding: 11px 0;\r\n\r\n    height: 100vh;\r\n    max-height: 100vh;\r\n\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n\r\n    width: 32px;\r\n\r\n    border-bottom: 2px solid var(--quaternary);\r\n\r\n    margin-bottom: 8px;\r\n\r\n`;","export const users = [\r\n    {    \r\n       nickname:\"Cristian Aragão\",\r\n       status: \"online\",\r\n    },\r\n    {\r\n        nickname: \"beyoncé.jamaicana\",\r\n        status: \"online\",\r\n    },\r\n    {   \r\n        nickname:\"Gusttavo Lima\",\r\n        status: \"online\",\r\n        isBot: true,\r\n    },\r\n    {\r\n        nickname: \"Reginaldo Rossi Pereira\",\r\n        status: \"offline\",\r\n        isBot: true,\r\n    },\r\n    {\r\n        nickname: \"Justin Bieber Brasileiro\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Dani Coelho\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"leo.m.n\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"seinaorick\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Alladin NA\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"kos\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Groovy\",\r\n        status: \"offline\",\r\n        isBot: true,\r\n    },\r\n    {\r\n        nickname: \"Rafaela Reis\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Flockie\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Alexandra Aragão\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Main Vayne\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Afastaldo Sonso\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Zapier\",\r\n        status: \"offline\",\r\n        isBot: true,\r\n    },\r\n    {\r\n        nickname: \"Gwen Tennyson\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Ben 10 11\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"Magno\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"neto.carvalho\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"mandy\",\r\n        status: \"offline\",\r\n    },\r\n    {\r\n        nickname: \"camiseta rosa\",\r\n        status: \"offline\",\r\n    },\r\n];\r\n\r\nexport const servers = [\r\n    {\r\n        name: \"Início\",\r\n        isHome: true,\r\n        mentions: 0,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Trabalho\",\r\n        mentions: 7,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Céu e Paraíso\",\r\n        mentions: 13,\r\n        hasNotifications: true,\r\n    },\r\n    {\r\n        name: \"LoL Amigos\",\r\n        mentions: 0,\r\n        hasNotifications: false,\r\n    },\r\n    {\r\n        name: \"Valorant Games\",\r\n        mentions: 5,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Lan House Dom Pedro\",\r\n        mentions: 0,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Campeonato Hip Hop\",\r\n        mentions: 0,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"kamaitachi is lei\",\r\n        mentions: 7,\r\n        hasNotifications: true,\r\n    },\r\n    {   \r\n        name: \"Família da Bagunça\",\r\n        mentions: 14,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 1,\r\n        hasNotifications: true,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 1,\r\n        hasNotifications: true,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 0,\r\n        hasNotifications: true,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 0,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 0,\r\n        hasNotifications: true,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 0,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 4,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 2,\r\n        hasNotifications: false,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 0,\r\n        hasNotifications: true,\r\n    },\r\n    {   \r\n        name: \"Server do Aragão\",\r\n        mentions: 4,\r\n        hasNotifications: false,\r\n    },\r\n];","import styled from \"styled-components\";\r\n\r\nimport { Props } from '.';\r\n\r\nexport const Button = styled.button<Props>`\r\n    display: flex;\r\n    align-items: center; // vertical\r\n    justify-content: center; // horizontal\r\n    flex-shrink: 0;\r\n\r\n    width: 48px;\r\n    height: 48px;\r\n\r\n    border-radius: 50%;\r\n\r\n    margin-bottom: 8px;\r\n\r\n    background-color: var(--primary);\r\n\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    > img {\r\n        width: 24px;\r\n        height: 24px;\r\n    }\r\n\r\n\r\n    &::before {\r\n        width: 9px;\r\n        height: 9px;\r\n\r\n        position: absolute;\r\n        left: -17px;\r\n        top: calc(50% - 4.5px);\r\n\r\n        background-color: var(--white);\r\n        border-radius: 50%;\r\n\r\n        content: '';\r\n        display: ${props => props.hasNotifications ? 'inline' : 'none'};\r\n    }\r\n\r\n    &::after {\r\n        background-color: var(--notification);\r\n        width: auto;\r\n        height: 25px;\r\n\r\n        padding: 0 4px;\r\n\r\n        position: absolute;\r\n        bottom: -4px;\r\n        right: -4px;\r\n\r\n        border-radius: 12px;\r\n        border: 4px solid var(--quaternary);\r\n\r\n        text-align: right;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n        color: var(--white);\r\n\r\n        content: '${props => props.mentions && props.mentions}';\r\n\r\n        display: ${props => props.mentions && props.mentions > 0 ? 'inline' : 'none'};\r\n    }\r\n\r\n    transition: border-radius .2s, background-color .2s;\r\n\r\n    &.active, \r\n    &:hover {\r\n        border-radius: 16px;\r\n        background-color: var(--discord);\r\n    }\r\n\r\n`;","export default __webpack_public_path__ + \"static/media/Logo.3dc90f85.svg\";","import React from \"react\";\r\n\r\nimport { Button } from \"./styles\";\r\n\r\nimport Logo from \"../../assets/Logo.svg\";\r\n\r\nexport interface Props {\r\n  isHome?: boolean;\r\n  selected?: boolean;\r\n  hasNotifications?: boolean;\r\n  mentions?: number;\r\n}\r\n\r\nconst ServerButton: React.FC<Props> = ({\r\n  isHome,\r\n  selected,\r\n  hasNotifications,\r\n  mentions,\r\n}) => {\r\n  return (\r\n    <Button\r\n      isHome={isHome}\r\n      hasNotifications={hasNotifications}\r\n      mentions={mentions}\r\n      className={selected ? \"active\" : \"\"}\r\n    >\r\n      {isHome && <img src={Logo} alt=\"Rocketseat\" />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ServerButton;\r\n","import React from \"react\";\r\n\r\nimport { Container, Separator } from \"./styles\";\r\n\r\nimport { servers } from '../../data/data';\r\n\r\nimport ServerButton from \"../ServerButton\";\r\n\r\nconst ServerList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n\r\n      {\r\n        servers.map((server, index) => \r\n          server?.isHome ? \r\n          <>\r\n            <ServerButton \r\n              isHome\r\n            /> \r\n            <Separator />\r\n          </>\r\n          : \r\n          <ServerButton \r\n            mentions={server.mentions} \r\n            hasNotifications={server.hasNotifications} \r\n          />\r\n        )\r\n      }\r\n\r\n      <Separator />\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServerList;\r\n","import styled from \"styled-components\";\r\n\r\nimport { ExpandMore } from 'styled-icons/material'\r\n\r\nexport const Container = styled.div`\r\n    grid-area: SN;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    padding: 0 11px 0 16px;\r\n\r\n    background-color: var(--secondary);\r\n\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const Title  = styled.div`\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    color: var(--white);\r\n`;\r\n\r\nexport const ExpandIcon = styled(ExpandMore)`\r\n    width: 28px;\r\n    height: 28px;\r\n\r\n    color: var(--white);\r\n    cursor: pointer;\r\n`;","import React from \"react\";\r\n\r\nimport { Container, Title, ExpandIcon } from './styles'\r\n\r\nconst ServerName: React.FC = () => {\r\n    return(\r\n        <Container>\r\n\r\n            <Title>Servidor do Aragão</Title>\r\n\r\n            <ExpandIcon/>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ServerName;","import styled from \"styled-components\";\r\n\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\n \r\nexport const Container = styled.div`\r\n    grid-area: CI;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    padding: 0 17px;\r\n\r\n    background-color: var(--primary);\r\n\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const HashTagIcon = styled(Hashtag)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--symbol );\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    margin-left: 9px;\r\n\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n\r\n    color: var(--white);\r\n`;\r\nexport const Separator = styled.div`\r\n    height: 24px;\r\n    width: 1px;\r\n\r\n    background-color: var(--white);\r\n    opacity: 0.2;\r\n\r\n    margin: 0 13px;\r\n\r\n`;\r\n\r\nexport const Description = styled.span`\r\n    font-size: 15px;\r\n    color: var(--gray);\r\n`;","import React from \"react\";\r\n\r\nimport { Container, HashTagIcon, Title, Separator, Description } from './styles'\r\n\r\nconst ChannelInfo: React.FC = () => {\r\n    return(\r\n        <Container>\r\n            <HashTagIcon />\r\n\r\n            <Title>chat-livre</Title>\r\n\r\n            <Separator/>\r\n\r\n            <Description>Canal aberto para conversas</Description>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChannelInfo;","import styled from \"styled-components\";\r\n\r\nimport { Add } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CL;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    padding: 24px 9.5px 0 16px;\r\n\r\n    background-color: var(--secondary);\r\n`;\r\n\r\nexport const Category = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    margin-bottom: 6px;\r\n\r\n    > span {\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n        font-weight: 500;\r\n        color: var(--gray);\r\n    }\r\n`;\r\n\r\nexport const AddCategoryIcon = styled(Add)`\r\n    width: 21px;\r\n    height: 21px;\r\n\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n\r\n    transition: color .2s;\r\n\r\n    &:hover {\r\n        color: var(--white)\r\n    }\r\n`;\r\n\r\nexport const ChannelButton = styled.div``;","import styled from \"styled-components\";\r\n\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\nimport { PersonAdd, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    cursor: pointer;\r\n\r\n    padding: 5px 3px;\r\n    border-radius: 5px;\r\n\r\n    background-color: transparent;\r\n\r\n    transition: background-color .2s;\r\n\r\n    > div {\r\n        display: flex;\r\n        align-items: center;\r\n    };\r\n\r\n    > .icons {\r\n        display: none;\r\n    };\r\n\r\n    > div span {\r\n        color: var(--senary);\r\n        margin-left: 5px;\r\n    };\r\n\r\n    &:hover,\r\n    &.active {\r\n        background-color: var(--quinary);\r\n\r\n        > div span {\r\n            color: var(--white)\r\n        }\r\n\r\n        > .icons {\r\n            display: flex;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const HashTagIcon = styled(Hashtag)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--symbol);\r\n`;\r\n\r\nexport const InviteIcon = styled(PersonAdd)`\r\n    width: 16px;\r\n    height: 16px;\r\n\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n\r\n    transition: color .2s;\r\n\r\n    &:hover {\r\n        color: var(--white);\r\n    }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n    width: 16px;\r\n    height: 16px;\r\n\r\n    margin-left: 4px;\r\n\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n\r\n    transition: color .2s;\r\n\r\n    &:hover {\r\n        color: var(--white);\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container, HashTagIcon, InviteIcon, SettingsIcon } from './styles'\r\n\r\nimport { Tooltip } from \"@chakra-ui/react\"\r\nexport interface Props {\r\n    channelName: string;\r\n    selected?: boolean;\r\n}\r\n\r\nconst ChannelButton: React.FC<Props> = ({\r\n    channelName,\r\n    selected\r\n}) => {\r\n    return(\r\n        <Container className={selected ? 'active' : ''}>\r\n\r\n            <div>\r\n                <HashTagIcon/>\r\n                <span>{channelName}</span>\r\n            </div>\r\n\r\n            <div className=\"icons\">\r\n                <Tooltip label=\"Criar convite\" bg=\"rgb(32, 34, 37)\">\r\n                    <InviteIcon/>\r\n                </Tooltip>\r\n\r\n                <Tooltip label=\"Editar canal\" bg=\"rgb(32, 34, 37)\">\r\n                    <SettingsIcon/>\r\n                </Tooltip>\r\n                \r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChannelButton;","import React from \"react\";\r\n\r\nimport { Container, Category, AddCategoryIcon } from './styles'\r\n\r\nimport ChannelButton from '../ChannelButton'\r\n\r\nconst ChannelList: React.FC = () => {\r\n    return(\r\n        <Container>\r\n            \r\n            <Category>\r\n                <span>Canais de texto</span>\r\n                <AddCategoryIcon/>\r\n            </Category>\r\n\r\n            <ChannelButton channelName=\"chat-livre\" selected/> \r\n            <ChannelButton channelName=\"trabalho\"/>\r\n            <ChannelButton channelName=\"lolzinho\"/>\r\n            <ChannelButton channelName=\"valorant\"/>\r\n            <ChannelButton channelName=\"cs-go\"/>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChannelList;","import styled from \"styled-components\";\r\n\r\nimport { Mic, Headset, Settings } from 'styled-icons/material'\r\n\r\nexport const Container = styled.div`\r\n    grid-area: UI;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    padding: 10px;\r\n\r\n    background-color: var(--quaternary);\r\n\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n\r\n    background-color: var(--gray);\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n    margin-left: 8px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    > strong {\r\n        color: var(--white);\r\n        font-size: 13px;\r\n        display: block;\r\n    }\r\n\r\n    > span {\r\n        color: var(--gray);\r\n        font-size: 13px;\r\n    }\r\n\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n\r\n    cursor: pointer;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > svg:not(:first-child) {\r\n        margin-left: 8px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.div`\r\n\r\n`;\r\n\r\nexport const MicIcon = styled(Mic)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n\r\n    transition: opacity 0.2;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n`;\r\n\r\nexport const HeadPhoneIcon = styled(Headset)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n\r\n    transition: opacity 0.2;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n        background-color: var(--primary);\r\n    }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n\r\n    transition: opacity 0.2;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;","import React from \"react\";\r\n\r\nimport { Tooltip } from \"@chakra-ui/react\"\r\n\r\nimport { Container, Profile, Avatar, UserData, Icons, MicIcon, HeadPhoneIcon, SettingsIcon } from './styles'\r\n\r\nconst UserInfo: React.FC = () => {\r\n    return(\r\n        <Container>\r\n\r\n            <Profile>\r\n                <Avatar/>\r\n                <UserData>\r\n                    <strong>Cristian Aragão</strong>\r\n                    <span>#4354</span>\r\n                </UserData>\r\n\r\n            </Profile>\r\n\r\n            <Icons>\r\n                <Tooltip label=\"Silenciar\" bg=\"rgb(32, 34, 37)\">\r\n                    <MicIcon/>\r\n                </Tooltip>\r\n\r\n                <Tooltip label=\"Desativar áudio\" bg=\"rgb(32, 34, 37)\">\r\n                    <HeadPhoneIcon/>\r\n                </Tooltip>\r\n\r\n                <Tooltip label=\"Configurações do usuário\" bg=\"rgb(32, 34, 37)\">\r\n                    <SettingsIcon/>\r\n                </Tooltip>\r\n\r\n            </Icons>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n\r\n    padding: 4px 16px;\r\n    margin-right: 4px;\r\n\r\n    background-color: transparent;\r\n\r\n    &.mention {\r\n        background-color: var(--mention-message);\r\n\r\n        border-left: 2px solid var(--mention-detail);\r\n        padding-left: 14px;\r\n    }\r\n\r\n    & + div {\r\n        margin-top: 13px;\r\n    }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n\r\n    margin-top: 4px;\r\n\r\n    flex-shrink: 0;\r\n\r\n    background-color: var(--secondary);\r\n    border-radius: 50%;\r\n\r\n    cursor: pointer;\r\n\r\n    &.bot {\r\n        background-color: var(--discord);\r\n    }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    min-height: 40px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    margin-left: 17px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    > strong {\r\n\r\n        cursor: pointer;\r\n\r\n        color: var(--white);\r\n        font-size: 16px;\r\n    }\r\n\r\n    > span {\r\n        margin-left: 6px;\r\n\r\n        background-color: var(--discord);\r\n        color: var(--white);\r\n\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n    }\r\n\r\n    > time {\r\n        margin-left: 10px;\r\n        color: var(--gray);\r\n        font-size: 13px;\r\n    }\r\n`;\r\nexport const Content = styled.div`\r\n    text-align: left;\r\n    font-size: 16px;\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Mention = styled.span`\r\n    color: var(--link);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;","import React from \"react\";\r\n\r\nimport { Container, Avatar, Message, Header, Content } from './styles'\r\n\r\nexport { Mention } from './styles';\r\n\r\ninterface Props {\r\n    author: string;\r\n    date: string;\r\n    content: string | React.ReactElement | React.ReactNode;\r\n    hasMentions?: boolean;\r\n    isBot?: boolean;\r\n}\r\n\r\nconst ChannelMessage: React.FC<Props> = ({\r\n    author,\r\n    date,\r\n    content,\r\n    hasMentions,\r\n    isBot,\r\n}) => {\r\n\r\n    \r\n\r\n    return(\r\n        <Container className={hasMentions ? 'mention' : ''}>\r\n            <Avatar className={isBot ? 'bot' : ''}/>\r\n\r\n            <Message>\r\n                <Header>\r\n                    <strong>{author}</strong>\r\n\r\n                    {isBot && <span>Bot</span>}\r\n\r\n                    <time>{date}</time>\r\n                </Header>\r\n\r\n                <Content>\r\n                    {content}\r\n                </Content>\r\n            </Message>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChannelMessage;","import styled from \"styled-components\";\r\n\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CD;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    max-height: calc(100vh - 46px);\r\n\r\n    background-color: var(--primary);\r\n`;\r\n\r\nexport const Messages = styled.div`\r\n    padding: 20px 0;\r\n\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    max-height: calc(100vh - 46px - 68px);\r\n\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 8px;\r\n        margin-right: 10px;\r\n        padding-right: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--tertiary);\r\n        border-radius: 4px;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: var(--secondary);\r\n        border-radius: 4px;\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n    width: 100%;\r\n\r\n    padding: 0 16px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    height: 44px;\r\n\r\n    padding: 0 10px 0 57px;\r\n\r\n    border-radius: 7px;\r\n\r\n    color: var(--white);\r\n    background-color: var(--chat-input);\r\n\r\n    position: relative;\r\n\r\n    &::placeholder {\r\n        color: var(--gray);\r\n    }\r\n\r\n    ~ svg {\r\n        position: relative;\r\n        top: -50%;\r\n        left: 14px;\r\n        transition: 100ms ease-in-out;\r\n    }\r\n`;\r\n\r\nexport const InputIcon = styled(AlternateEmail)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--gray);\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport ChannelMessage, { Mention } from \"../ChannelMessage\";\r\n\r\nimport { Container, Messages, InputWrapper, Input, InputIcon } from \"./styles\";\r\n\r\nconst ChannelData: React.FC = () => {\r\n\r\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>\r\n\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    const [messages, setMessages] = useState([\r\n        {\r\n            author: \"Ben 10 11\",\r\n            date: \"Ontem às 17:53\",\r\n            content: \"Queria ter visto o jogo do Brasil :(\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"beyonce.jamaicana\",\r\n            date: \"Ontem às 17:59\",\r\n            content: <><Mention>@Ben 10 11</Mention> pra ver o Neymar caindo como sempre?</>,\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Justin Bieber Brasileiro\",\r\n            date: \"Ontem às 18:02\",\r\n            content: <><Mention>@beyonce.jamaicana</Mention> deixa eu ser fã do ney em paz, cara &#x1F60D;</>,\r\n            isBot: false,\r\n            hasMentions: false\r\n        },   \r\n        {\r\n            author: \"beyonce.jamaicana\",\r\n            date: \"Ontem às 18:02\",\r\n            content: \"iludido haha\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        }, \r\n        {\r\n            author: \"seinaorick\",\r\n            date: \"Ontem às 18:04\",\r\n            content: <><Mention>@everyone</Mention> eii galera! onde é a boa hoje??</>,\r\n            isBot: false,\r\n            hasMentions: true\r\n        }, \r\n        {\r\n            author: \"Ben 10 11\",\r\n            date: \"Ontem às 18:05\",\r\n            content: \"Que tal Ponta Negra??\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"seinaorick\",\r\n            date: \"Ontem às 18:09\",\r\n            content: \"humm, pode ser, tá tarde não?\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Ben 10 11\",\r\n            date: \"Ontem às 18:13\",\r\n            content: \"Pra mim não e pra vocês?\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Dani Coelho\",\r\n            date: \"Ontem às 18:15\",\r\n            content: <>Tooop!!<br/>Mas não vai dar pra eu ir<br/>Se tivessem me chamado antes &#x1F613;</>,\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Ben 10 11\",\r\n            date: \"Ontem às 18:17\",\r\n            content: <><Mention>@Dani Coelho</Mention> você sempre fala isso &#x1F621;</>,\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Dani Coelho\",\r\n            date: \"Ontem às 18:18\",\r\n            content: \"Desculpaa\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Ben 10 11\",\r\n            date: \"Ontem às 18:18\",\r\n            content: \"desculpo não humm\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Justin Bieber Brasileiro\",\r\n            date: \"Ontem às 22:21\",\r\n            content: \"Flw!! vou é dormir, tá tarde sim\",\r\n            isBot: false,\r\n            hasMentions: false\r\n        },  \r\n        {\r\n            author: \"Gustavo Lima\",\r\n            date: `Hoje às ${new Date().getHours() - 1}:${new Date().getMinutes() - 2}`,\r\n            content: <>Ei, <Mention>@everyone</Mention>! bora jogar CS?? entrem aí!</>,\r\n            isBot: true,\r\n            hasMentions: true\r\n        },\r\n        {\r\n            author: \"Reginaldo Rossi Pereira\",\r\n            date: `Hoje às ${new Date().getHours()}:${new Date().getMinutes() - 1}`,\r\n            content: <><Mention>@Cristian Aragão</Mention>, digita algo aí!</>,\r\n            isBot: true,\r\n            hasMentions: false\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const div = messagesRef.current;\r\n\r\n        if(div){\r\n            div.scrollTop = div.scrollHeight;\r\n        }\r\n\r\n    }, [messagesRef, messages]);\r\n\r\n    const verifyStringVoid = (text: string) => {\r\n        if(text === \"\") return false;\r\n\r\n        let white_spaces = 0;\r\n\r\n        // eslint-disable-next-line\r\n        text.split(\"\").map((t, i) => {            \r\n            if(t === \" \") white_spaces += 1;\r\n        });\r\n\r\n        if(white_spaces === text.length) return false;\r\n\r\n        return true;\r\n    };\r\n\r\n    const getTime = () => {\r\n        let time = new Date();\r\n        let hourString = \"\";\r\n        let minutesString = \"\";\r\n\r\n        if(time.getHours() < 10) hourString = \"0\" + time.getHours();\r\n        else hourString = time.getHours().toString();\r\n\r\n        if(time.getMinutes() < 10) minutesString = \"0\" + time.getMinutes();\r\n        else minutesString = time.getMinutes().toString();\r\n\r\n        return `Hoje às ${hourString}:${minutesString}`\r\n    };\r\n\r\n    const handleKeyDown = (event: any) => {\r\n        if (event.key === \"Enter\" && verifyStringVoid(text)) {\r\n            let messagesAux = [...messages];\r\n\r\n            if(messagesAux[messagesAux.length - 1].author === \"Cristian Aragão\" && messagesAux[messagesAux.length - 1].date === getTime()){\r\n                messagesAux[messagesAux.length - 1].content = <>{messagesAux[messagesAux.length - 1].content} <br/> {text}</>\r\n            }\r\n            else{\r\n                messagesAux.push({ author: \"Cristian Aragão\", date: getTime(), content: text, isBot: false, hasMentions: false });\r\n            }\r\n\r\n            setMessages(messagesAux);\r\n            setText(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Messages ref={messagesRef}>\r\n                {messages.map((message, index) => (\r\n                    <ChannelMessage\r\n                        key={index}\r\n                        author={message.author}\r\n                        date={message.date}\r\n                        content={message.content}\r\n                        isBot={message.isBot}\r\n                        hasMentions={message.hasMentions}\r\n                    />\r\n                ))}\r\n            </Messages>\r\n\r\n            <InputWrapper>\r\n                <Input placeholder=\"Conversar em #chat-livre\" value={text} onChange={(event) => setText(event.target.value)} onKeyDown={(event) => handleKeyDown(event)}/>\r\n                <InputIcon />\r\n            </InputWrapper>\r\n\r\n        </Container>\r\n    );\r\n    };\r\n\r\nexport default ChannelData;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    grid-area: UL;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    padding: 3px 6px 0 16px;\r\n\r\n    background-color: var(--secondary);\r\n\r\n    max-height: calc(100vh - 46px);\r\n\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--tertiary);\r\n        border-radius: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: var(--secondary);\r\n    }\r\n`;\r\n\r\nexport const Role = styled.span`\r\n    margin-top: 20px;\r\n\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n\r\n    color: var(--gray);\r\n`;\r\n\r\nexport const User  = styled.div`\r\n    margin-top: 5px;\r\n    padding: 5px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n\r\n    border-radius: 4px;\r\n    background: transparent;\r\n\r\n    transition: background 0.2s;\r\n\r\n    &:hover {\r\n        background: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    > strong {\r\n        margin-left: 13px;\r\n        font-weight: 500;\r\n        color: var(--white);\r\n        opacity: 0.7;\r\n\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n    }\r\n\r\n    > span {\r\n        margin-left: 9px;\r\n\r\n        background-color: var(--discord);\r\n        color: var(--white);\r\n\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n    }\r\n\r\n`;\r\n\r\n\r\nexport const Avatar = styled.div`\r\n    flex-shrink: 0;\r\n\r\n    width: 32px;\r\n    height: 32px;\r\n\r\n    background-color: var(--primary);\r\n\r\n    border-radius: 50%;\r\n\r\n    &.bot {\r\n        background-color: var(--discord);\r\n    }\r\n`;","import React from \"react\";\r\n\r\nimport { Container, Role, Avatar, User  } from './styles'\r\n\r\nimport { Tooltip } from \"@chakra-ui/react\"\r\n\r\nimport { users } from '../../data/data'\r\n\r\ninterface UserProps {\r\n    nickname: string;\r\n    isBot?: boolean;\r\n}\r\n\r\nconst UserRow: React.FC<UserProps> = ({ nickname, isBot }) => {\r\n    return(\r\n        <User>\r\n            <Avatar className={isBot ? 'bot' : ''}/>\r\n\r\n            <Tooltip label={nickname} bg=\"rgb(32, 34, 37)\">\r\n                <strong>{nickname}</strong>\r\n            </Tooltip>\r\n\r\n            {isBot && <span>Bot</span>}\r\n        </User>\r\n    )\r\n};\r\n\r\nconst UserList: React.FC = () => {\r\n    return(\r\n        <Container>\r\n            <Role>Disponível - {users.filter((user) => user.status === \"online\").length}</Role>\r\n\r\n            {\r\n                users.filter((user) => user.status === \"online\").map((user, index) => user?.isBot ? <UserRow key={index} nickname={user.nickname} isBot/> : <UserRow key={index} nickname={user.nickname}/>)\r\n            }\r\n\r\n            <Role>Offline - {users.filter((user) => user.status === \"offline\").length}</Role>\r\n\r\n            {\r\n                users.filter((user) => user.status === \"offline\").map((user, index) => user?.isBot ? <UserRow key={index} nickname={user.nickname} isBot/> : <UserRow key={index} nickname={user.nickname}/>)\r\n            }\r\n                      \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React from \"react\";\r\n\r\nimport { Grid } from './styles'\r\n\r\nimport ServerList from '../ServerList'\r\nimport ServerName from \"../ServerName\"\r\nimport ChannelInfo from '../ChannelInfo'\r\nimport ChannelList from '../ChannelList'\r\nimport UserInfo from '../UserInfo'\r\nimport ChannelData from '../ChannelData'\r\nimport UserList from '../UserList'\r\n\r\nconst Layout: React.FC = () => {\r\n    return(\r\n        <Grid>\r\n\r\n            <ServerList/>\r\n\r\n            <ServerName/>\r\n\r\n            <ChannelInfo/>\r\n            \r\n            <ChannelList/>\r\n\r\n            <UserInfo/>\r\n\r\n            <ChannelData/>\r\n\r\n            <UserList/>\r\n\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Layout;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100%;\r\n    }\r\n\r\n    *, button, input {\r\n        border: 0;\r\n        outline: 0;\r\n\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n\r\n    #root {\r\n        --primary: #36393f;\r\n        --secondary: #2f3136;\r\n        --tertiary: rgb(32, 34, 37);\r\n        --quaternary: #292b2f;\r\n        --quinary: #393d42;\r\n        --senary: #828386;\r\n\r\n        --white: #ffffff;\r\n        --gray: #8a8c90;\r\n        --chat-input: rgb(64, 68, 75);\r\n        --symbol: #74777a;\r\n\r\n        --notification: #f84a4b;\r\n        --discord: #6e86d6;\r\n        --mention-detail: #f9a839;\r\n        --mention-message: #413f3f;\r\n\r\n        --link: #5d80d6;\r\n\r\n        --rocketseat: #6633cc\r\n    }\r\n\r\n`;","import React from 'react';\n\nimport Layout from './components/Layout';\n\nimport GlobalStyles from './styles/GlobalStyles';\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n\n      <Layout/>\n      <GlobalStyles/>\n      \n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}